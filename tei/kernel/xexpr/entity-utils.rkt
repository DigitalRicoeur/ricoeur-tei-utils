#lang racket/base

(require racket/contract
         (for-syntax syntax/parse
                     racket/base
                     ))

(provide entity-symbol/c
         entity-char/c
         entity-symbol?
         entity-symbols-list
         entity-char->symbol
         entity-symbol->char
         )

(module+ main
  (provide pairs:symbol+char))

;; See macro for typed submodule

(define-syntax (define-symbolic-entity-utils stx)
  (define-syntax-class entity-clause
    #:description "entity clause"
    #:attributes {name ch code-point decimal
                       case/sym->char case/char->sym}
    (pattern (name:id ch:char code-point:str decimal:nat)
             #:fail-unless
             (eqv? (syntax->datum #'ch)
                   (integer->char (syntax->datum #'decimal)))
             "character does not match decimal"
             #:with case/sym->char #`[(name) ch]
             #:with case/char->sym #`[(ch) 'name]))
  (syntax-parse stx
    [(_ clause:entity-clause ...+)
     #:with require-typed-submod
     (datum->syntax stx '(require (submod "." typed)))
     (define-syntax-rule (with-capturing [name ...] body)
       (with-syntax ([name (datum->syntax stx 'name)] ...)
         body))
     (with-capturing
      [entity-symbol/c entity-char/c pairs:symbol+char
                       entity-symbol? entity-symbol->char entity-char->symbol
                       entity-symbols-list Entity-Symbol]
      #`(begin
          (module+ main 
            (define pairs:symbol+char
              `((clause.name . clause.ch) ...)))
          (module typed typed/racket/base
            (provide Entity-Symbol
                     entity-symbols-list
                     entity-symbol?
                     )
            (define-type Entity-Symbol (U 'clause.name ...))
            (: entity-symbols-list (Listof Entity-Symbol))
            (define entity-symbols-list
              '(clause.name ...))
            (: entity-symbol? (-> Any Boolean))
            (define (entity-symbol? cf)
              (case cf
                [(clause.name ...) #t]
                [else #f]))
            #|END module typed|#)
          require-typed-submod
          (define/final-prop entity-symbol/c
            (or/c 'clause.name ...))
          (define/final-prop entity-char/c
            (or/c clause.ch ...))
          (define (entity-symbol->char cf-sym)
            (case cf-sym
              clause.case/sym->char ...
              [else (raise-arguments-error 'entity-symbol->char
                                           "contract violation"
                                           "expected" entity-symbol/c
                                           "given" cf-sym)]))
          (define (entity-char->symbol cf-char)
            (case cf-char
              clause.case/char->sym ...
              [else (raise-arguments-error entity-char->symbol
                                           "contract violation"
                                           "expected" entity-char/c
                                           "given" cf-char)]))
          ))]))



;; based on https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references
;; as of 2017-02-02
(define-symbolic-entity-utils
  (amp #\& "U+0026" 38)
  (apos #\' "U+0027" 39)
  (lt #\< "U+003C" 60)
  (gt #\> "U+003E" 62)
  (nbsp #\u00A0 "U+00A0" 160)
  (iexcl #\¡ "U+00A1" 161)
  (cent #\¢ "U+00A2" 162)
  (pound #\£ "U+00A3" 163)
  (curren #\¤ "U+00A4" 164)
  (yen #\¥ "U+00A5" 165)
  (brvbar #\¦ "U+00A6" 166)
  (sect #\§ "U+00A7" 167)
  (uml #\¨ "U+00A8" 168)
  (copy #\© "U+00A9" 169)
  (ordf #\ª "U+00AA" 170)
  (laquo #\« "U+00AB" 171)
  (not #\¬ "U+00AC" 172)
  (shy #\u00AD "U+00AD" 173)
  (reg #\® "U+00AE" 174)
  (macr #\¯ "U+00AF" 175)
  (deg #\° "U+00B0" 176)
  (plusmn #\± "U+00B1" 177)
  (sup2 #\² "U+00B2" 178)
  (sup3 #\³ "U+00B3" 179)
  (acute #\´ "U+00B4" 180)
  (micro #\µ "U+00B5" 181)
  (para #\¶ "U+00B6" 182)
  (middot #\· "U+00B7" 183)
  (cedil #\¸ "U+00B8" 184)
  (sup1 #\¹ "U+00B9" 185)
  (ordm #\º "U+00BA" 186)
  (raquo #\» "U+00BB" 187)
  (frac14 #\¼ "U+00BC" 188)
  (frac12 #\½ "U+00BD" 189)
  (frac34 #\¾ "U+00BE" 190)
  (iquest #\¿ "U+00BF" 191)
  (Agrave #\À "U+00C0" 192)
  (Aacute #\Á "U+00C1" 193)
  (Acirc #\Â "U+00C2" 194)
  (Atilde #\Ã "U+00C3" 195)
  (Auml #\Ä "U+00C4" 196)
  (Aring #\Å "U+00C5" 197)
  (AElig #\Æ "U+00C6" 198)
  (Ccedil #\Ç "U+00C7" 199)
  (Egrave #\È "U+00C8" 200)
  (Eacute #\É "U+00C9" 201)
  (Ecirc #\Ê "U+00CA" 202)
  (Euml #\Ë "U+00CB" 203)
  (Igrave #\Ì "U+00CC" 204)
  (Iacute #\Í "U+00CD" 205)
  (Icirc #\Î "U+00CE" 206)
  (Iuml #\Ï "U+00CF" 207)
  (ETH #\Ð "U+00D0" 208)
  (Ntilde #\Ñ "U+00D1" 209)
  (Ograve #\Ò "U+00D2" 210)
  (Oacute #\Ó "U+00D3" 211)
  (Ocirc #\Ô "U+00D4" 212)
  (Otilde #\Õ "U+00D5" 213)
  (Ouml #\Ö "U+00D6" 214)
  (times #\× "U+00D7" 215)
  (Oslash #\Ø "U+00D8" 216)
  (Ugrave #\Ù "U+00D9" 217)
  (Uacute #\Ú "U+00DA" 218)
  (Ucirc #\Û "U+00DB" 219)
  (Uuml #\Ü "U+00DC" 220)
  (Yacute #\Ý "U+00DD" 221)
  (THORN #\Þ "U+00DE" 222)
  (szlig #\ß "U+00DF" 223)
  (agrave #\à "U+00E0" 224)
  (aacute #\á "U+00E1" 225)
  (acirc #\â "U+00E2" 226)
  (atilde #\ã "U+00E3" 227)
  (auml #\ä "U+00E4" 228)
  (aring #\å "U+00E5" 229)
  (aelig #\æ "U+00E6" 230)
  (ccedil #\ç "U+00E7" 231)
  (egrave #\è "U+00E8" 232)
  (eacute #\é "U+00E9" 233)
  (ecirc #\ê "U+00EA" 234)
  (euml #\ë "U+00EB" 235)
  (igrave #\ì "U+00EC" 236)
  (iacute #\í "U+00ED" 237)
  (icirc #\î "U+00EE" 238)
  (iuml #\ï "U+00EF" 239)
  (eth #\ð "U+00F0" 240)
  (ntilde #\ñ "U+00F1" 241)
  (ograve #\ò "U+00F2" 242)
  (oacute #\ó "U+00F3" 243)
  (ocirc #\ô "U+00F4" 244)
  (otilde #\õ "U+00F5" 245)
  (ouml #\ö "U+00F6" 246)
  (divide #\÷ "U+00F7" 247)
  (oslash #\ø "U+00F8" 248)
  (ugrave #\ù "U+00F9" 249)
  (uacute #\ú "U+00FA" 250)
  (ucirc #\û "U+00FB" 251)
  (uuml #\ü "U+00FC" 252)
  (yacute #\ý "U+00FD" 253)
  (thorn #\þ "U+00FE" 254)
  (yuml #\ÿ "U+00FF" 255)
  (OElig #\Œ "U+0152" 338)
  (oelig #\œ "U+0153" 339)
  (Scaron #\Š "U+0160" 352)
  (scaron #\š "U+0161" 353)
  (Yuml #\Ÿ "U+0178" 376)
  (fnof #\ƒ "U+0192" 402)
  (circ #\ˆ "U+02C6" 710)
  (tilde #\˜ "U+02DC" 732)
  (Alpha #\Α "U+0391" 913)
  (Beta #\Β "U+0392" 914)
  (Gamma #\Γ "U+0393" 915)
  (Delta #\Δ "U+0394" 916)
  (Epsilon #\Ε "U+0395" 917)
  (Zeta #\Ζ "U+0396" 918)
  (Eta #\Η "U+0397" 919)
  (Theta #\Θ "U+0398" 920)
  (Iota #\Ι "U+0399" 921)
  (Kappa #\Κ "U+039A" 922)
  (Lambda #\Λ "U+039B" 923)
  (Mu #\Μ "U+039C" 924)
  (Nu #\Ν "U+039D" 925)
  (Xi #\Ξ "U+039E" 926)
  (Omicron #\Ο "U+039F" 927)
  (Pi #\Π "U+03A0" 928)
  (Rho #\Ρ "U+03A1" 929)
  (Sigma #\Σ "U+03A3" 931)
  (Tau #\Τ "U+03A4" 932)
  (Upsilon #\Υ "U+03A5" 933)
  (Phi #\Φ "U+03A6" 934)
  (Chi #\Χ "U+03A7" 935)
  (Psi #\Ψ "U+03A8" 936)
  (Omega #\Ω "U+03A9" 937)
  (alpha #\α "U+03B1" 945)
  (beta #\β "U+03B2" 946)
  (gamma #\γ "U+03B3" 947)
  (delta #\δ "U+03B4" 948)
  (epsilon #\ε "U+03B5" 949)
  (zeta #\ζ "U+03B6" 950)
  (eta #\η "U+03B7" 951)
  (theta #\θ "U+03B8" 952)
  (iota #\ι "U+03B9" 953)
  (kappa #\κ "U+03BA" 954)
  (lambda #\λ "U+03BB" 955)
  (mu #\μ "U+03BC" 956)
  (nu #\ν "U+03BD" 957)
  (xi #\ξ "U+03BE" 958)
  (omicron #\ο "U+03BF" 959)
  (pi #\π "U+03C0" 960)
  (rho #\ρ "U+03C1" 961)
  (sigmaf #\ς "U+03C2" 962)
  (sigma #\σ "U+03C3" 963)
  (tau #\τ "U+03C4" 964)
  (upsilon #\υ "U+03C5" 965)
  (phi #\φ "U+03C6" 966)
  (chi #\χ "U+03C7" 967)
  (psi #\ψ "U+03C8" 968)
  (omega #\ω "U+03C9" 969)
  (thetasym #\ϑ "U+03D1" 977)
  (upsih #\ϒ "U+03D2" 978)
  (piv #\ϖ "U+03D6" 982)
  (ensp #\u2002 "U+2002" 8194)
  (emsp #\u2003 "U+2003" 8195)
  (thinsp #\u2009 "U+2009" 8201)
  (zwnj #\u200C "U+200C" 8204)
  (zwj #\u200D "U+200D" 8205)
  (lrm #\u200E "U+200E" 8206)
  (rlm #\u200F "U+200F" 8207)
  (ndash #\– "U+2013" 8211)
  (mdash #\— "U+2014" 8212)
  (lsquo #\‘ "U+2018" 8216)
  (rsquo #\’ "U+2019" 8217)
  (sbquo #\‚ "U+201A" 8218)
  (ldquo #\“ "U+201C" 8220)
  (rdquo #\” "U+201D" 8221)
  (bdquo #\„ "U+201E" 8222)
  (dagger #\† "U+2020" 8224)
  (Dagger #\‡ "U+2021" 8225)
  (bull #\• "U+2022" 8226)
  (hellip #\… "U+2026" 8230)
  (permil #\‰ "U+2030" 8240)
  (prime #\′ "U+2032" 8242)
  (Prime #\″ "U+2033" 8243)
  (lsaquo #\‹ "U+2039" 8249)
  (rsaquo #\› "U+203A" 8250)
  (oline #\‾ "U+203E" 8254)
  (frasl #\⁄ "U+2044" 8260)
  (euro #\€ "U+20AC" 8364)
  (image #\ℑ "U+2111" 8465)
  (weierp #\℘ "U+2118" 8472)
  (real #\ℜ "U+211C" 8476)
  (trade #\™ "U+2122" 8482)
  (alefsym #\ℵ "U+2135" 8501)
  (larr #\← "U+2190" 8592)
  (uarr #\↑ "U+2191" 8593)
  (rarr #\→ "U+2192" 8594)
  (darr #\↓ "U+2193" 8595)
  (harr #\↔ "U+2194" 8596)
  (crarr #\↵ "U+21B5" 8629)
  (lArr #\⇐ "U+21D0" 8656)
  (uArr #\⇑ "U+21D1" 8657)
  (rArr #\⇒ "U+21D2" 8658)
  (dArr #\⇓ "U+21D3" 8659)
  (hArr #\⇔ "U+21D4" 8660)
  (forall #\∀ "U+2200" 8704)
  (part #\∂ "U+2202" 8706)
  (exist #\∃ "U+2203" 8707)
  (empty #\∅ "U+2205" 8709)
  (nabla #\∇ "U+2207" 8711)
  (isin #\∈ "U+2208" 8712)
  (notin #\∉ "U+2209" 8713)
  (ni #\∋ "U+220B" 8715)
  (prod #\∏ "U+220F" 8719)
  (sum #\∑ "U+2211" 8721)
  (minus #\− "U+2212" 8722)
  (lowast #\∗ "U+2217" 8727)
  (radic #\√ "U+221A" 8730)
  (prop #\∝ "U+221D" 8733)
  (infin #\∞ "U+221E" 8734)
  (ang #\∠ "U+2220" 8736)
  (and #\∧ "U+2227" 8743)
  (or #\∨ "U+2228" 8744)
  (cap #\∩ "U+2229" 8745)
  (cup #\∪ "U+222A" 8746)
  (int #\∫ "U+222B" 8747)
  (there4 #\∴ "U+2234" 8756)
  (sim #\∼ "U+223C" 8764)
  (cong #\≅ "U+2245" 8773)
  (asymp #\≈ "U+2248" 8776)
  (ne #\≠ "U+2260" 8800)
  (equiv #\≡ "U+2261" 8801)
  (le #\≤ "U+2264" 8804)
  (ge #\≥ "U+2265" 8805)
  (sub #\⊂ "U+2282" 8834)
  (sup #\⊃ "U+2283" 8835)
  (nsub #\⊄ "U+2284" 8836)
  (sube #\⊆ "U+2286" 8838)
  (supe #\⊇ "U+2287" 8839)
  (oplus #\⊕ "U+2295" 8853)
  (otimes #\⊗ "U+2297" 8855)
  (perp #\⊥ "U+22A5" 8869)
  (sdot #\⋅ "U+22C5" 8901)
  (lceil #\⌈ "U+2308" 8968)
  (rceil #\⌉ "U+2309" 8969)
  (lfloor #\⌊ "U+230A" 8970)
  (rfloor #\⌋ "U+230B" 8971)
  (lang #\〈 "U+2329" 9001)
  (rang #\〉 "U+232A" 9002)
  (loz #\◊ "U+25CA" 9674)
  (spades #\♠ "U+2660" 9824)
  (clubs #\♣ "U+2663" 9827)
  (hearts #\♥ "U+2665" 9829)
  (diams #\♦ "U+2666" 9830))






